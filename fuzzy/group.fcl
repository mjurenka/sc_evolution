FUNCTION_BLOCK groupControl	// Block definition (there may be more than one block per file)

// Define input variables
VAR_INPUT				
	enemyCount : REAL;
	distanceToTarget : REAL;
	targetHealth: REAL;
END_VAR

// Define output variable
VAR_OUTPUT				
	groupSize : REAL;
END_VAR


FUZZIFY enemyCount			
	TERM small := (0, 1) (100, 0); 
	TERM medium := (90, 0) (130,1) (170,1) (200,0);
	TERM large := (190, 0) (300, 1);
END_FUZZIFY

FUZZIFY targetHealth	
	TERM small := (0, 1) (35, 0); 
	TERM medium := (30, 0) (35, 1) (60, 1) (65, 0);
	TERM large := (60, 0) (100, 1);
END_FUZZIFY

FUZZIFY distanceToTarget			
	TERM small := (0, 1) (100, 0); 
	TERM medium := (90, 0) (130,1) (170,1) (200,0);
	TERM large := (190, 0) (300, 1);
END_FUZZIFY

// Defzzzify output variable
DEFUZZIFY groupSize			
	TERM small := (1, 1) (25, 0);
	TERM medium := (25, 0) (40,1) (45,1) (60,0);
	TERM large := (60, 0) (100, 1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

// Inference rules
RULEBLOCK No1
	AND : MIN;	// Use 'min' for 'and'
	ACT : MIN;	// Use 'min' activation method
	ACCU : MAX;	// Use 'max' accumulation method

	RULE 1 : IF enemyCount IS small AND distanceToTarget IS large THEN groupSize IS small;
	RULE 2 : IF enemyCount IS large AND distanceToTarget IS large THEN groupSize IS medium;
	RULE 3 : IF enemyCount IS large AND distanceToTarget IS small THEN groupSize IS large;
	RULE 4 : IF targetHealth IS small AND distanceToTarget IS medium THEN groupSize IS large;
	RULE 5 : IF enemyCount IS small AND targetHealth IS small THEN groupSize IS medium; 
END_RULEBLOCK

END_FUNCTION_BLOCK