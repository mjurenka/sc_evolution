FUNCTION_BLOCK individualControl	// Block definition (there may be more than one block per file)

// Define input variables
VAR_INPUT				
	nearestEnemyDistance : REAL;
	selfHealth : REAL;
	targetHealth: REAL;
END_VAR

// Define output variable
VAR_OUTPUT				
	actionToTake : REAL;
END_VAR


FUZZIFY nearestEnemyDistance			
	TERM small := (0, 1) (100, 0); 
	TERM medium := (80, 0) (90, 1) (210, 1) (220, 0);
	TERM large := (200, 0) (320, 1);
END_FUZZIFY

FUZZIFY targetHealth	
	TERM small := (0, 1) (35, 0); 
	TERM medium := (30, 0) (35, 1) (60, 1) (65, 0);
	TERM large := (60, 0) (100, 1);
END_FUZZIFY

FUZZIFY selfHealth			
	TERM small := (0, 1) (2, 0); 
	TERM medium := (1, 0) (2, 1) (3, 1) (4, 0);
	TERM large := (4, 0) (5, 1);
END_FUZZIFY

// Defzzzify output variable
DEFUZZIFY actionToTake			
	TERM frontLines := (0, 0) (1, 1) (2, 0); 
	TERM holdPosition := (1, 0) (2, 1) (3, 0); 
	TERM keepBack := (2, 0) (3, 1) (4, 0);  
	TERM defend := (3, 0) (4, 1) (5, 0); 
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

// Inference rules
RULEBLOCK No1
	AND : MIN;	// Use 'min' for 'and'
	ACT : MIN;	// Use 'min' activation method
	ACCU : MAX;	// Use 'max' accumulation method

	RULE 1 : IF selfHealth IS small AND nearestEnemyDistance IS small THEN actionToTake IS keepBack;
	RULE 2 : IF selfHealth IS medium AND nearestEnemyDistance IS small THEN actionToTake IS defend;
	RULE 3 : IF targetHealth IS small AND nearestEnemyDistance IS medium THEN actionToTake IS defend;
	RULE 4 : IF targetHealth IS medium AND selfHealth IS large THEN actionToTake IS frontLines;
	RULE 5 : IF selfHealth IS medium AND nearestEnemyDistance IS medium THEN actionToTake IS frontLines; 
	RULE 6 : IF selfHealth IS large AND nearestEnemyDistance IS medium THEN actionToTake IS frontLines;
	RULE 7 : IF targetHealth IS large AND nearestEnemyDistance IS large THEN actionToTake IS holdPosition;
	RULE 8 : IF targetHealth IS large AND nearestEnemyDistance IS small THEN actionToTake IS defend;
END_RULEBLOCK

END_FUNCTION_BLOCK